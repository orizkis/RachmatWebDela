[{"/home/delameta/Desktop/belajar/efc/src/index.js":"1","/home/delameta/Desktop/belajar/efc/src/reportWebVitals.js":"2","/home/delameta/Desktop/belajar/efc/src/App.js":"3","/home/delameta/Desktop/belajar/efc/src/Router/index.js":"4","/home/delameta/Desktop/belajar/efc/src/components/index.js":"5","/home/delameta/Desktop/belajar/efc/src/pages/index.js":"6","/home/delameta/Desktop/belajar/efc/src/components/moleculs/index.js":"7","/home/delameta/Desktop/belajar/efc/src/pages/Login/index.js":"8","/home/delameta/Desktop/belajar/efc/src/pages/MainApp/index.js":"9","/home/delameta/Desktop/belajar/efc/src/components/atoms/index.js":"10","/home/delameta/Desktop/belajar/efc/src/pages/Support/index.js":"11","/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/index.js":"12","/home/delameta/Desktop/belajar/efc/src/pages/Pemeliharaan/index.js":"13","/home/delameta/Desktop/belajar/efc/src/components/moleculs/Layout/index.js":"14","/home/delameta/Desktop/belajar/efc/src/components/atoms/Gap/index.js":"15","/home/delameta/Desktop/belajar/efc/src/components/atoms/PrivateRoute/index.js":"16","/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/Reader/index.js":"17","/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/Reader/TesFungsi/index.js":"18","/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/Reader/Kelengkapan/index.js":"19"},{"size":520,"mtime":1612848071011,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1612848071011,"results":"22","hashOfConfig":"21"},{"size":93,"mtime":1612848071011,"results":"23","hashOfConfig":"21"},{"size":642,"mtime":1612848071011,"results":"24","hashOfConfig":"21"},{"size":53,"mtime":1612848071011,"results":"25","hashOfConfig":"21"},{"size":237,"mtime":1612848071011,"results":"26","hashOfConfig":"21"},{"size":51,"mtime":1612848071011,"results":"27","hashOfConfig":"21"},{"size":1561,"mtime":1612848071011,"results":"28","hashOfConfig":"21"},{"size":991,"mtime":1612848071011,"results":"29","hashOfConfig":"21"},{"size":99,"mtime":1612848071011,"results":"30","hashOfConfig":"21"},{"size":19680,"mtime":1612848071011,"results":"31","hashOfConfig":"21"},{"size":3981,"mtime":1612848431258,"results":"32","hashOfConfig":"21"},{"size":18469,"mtime":1612848071011,"results":"33","hashOfConfig":"21"},{"size":4440,"mtime":1612848071011,"results":"34","hashOfConfig":"21"},{"size":137,"mtime":1612848071011,"results":"35","hashOfConfig":"21"},{"size":496,"mtime":1612848071011,"results":"36","hashOfConfig":"21"},{"size":3879,"mtime":1612850875918,"results":"37","hashOfConfig":"21"},{"size":9695,"mtime":1612850797034,"results":"38","hashOfConfig":"21"},{"size":6053,"mtime":1612850833150,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"11wdhxc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/delameta/Desktop/belajar/efc/src/index.js",[],["81","82"],"/home/delameta/Desktop/belajar/efc/src/reportWebVitals.js",[],"/home/delameta/Desktop/belajar/efc/src/App.js",[],"/home/delameta/Desktop/belajar/efc/src/Router/index.js",[],"/home/delameta/Desktop/belajar/efc/src/components/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/index.js",[],"/home/delameta/Desktop/belajar/efc/src/components/moleculs/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/Login/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/MainApp/index.js",[],"/home/delameta/Desktop/belajar/efc/src/components/atoms/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/Support/index.js",["83","84","85","86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nlet a = {\r\n  namaPengemudi: \"\",\r\n  nomorBody: \"\",\r\n  nopol: \"\",\r\n  penyedia: \"\",\r\n  waktuGangguan: \"\",\r\n  deskripsi: \"\",\r\n  checkProblem: [],\r\n  tindakan: [],\r\n  diagnosa: \"\",\r\n  visit: \"\",\r\n  perbaikanSelesai: \"\",\r\n  waktuPerbaikan: \"\",\r\n  catatan: \"\",\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  logo: {\r\n    margin: \"20px 0\",\r\n    width: \"80px\",\r\n    padding: \"10px\",\r\n    height: \"auto\",\r\n    float: \"left\",\r\n  },\r\n  title: {\r\n    width: \"300px\",\r\n    height: \"auto\",\r\n    color: \"#000000\",\r\n    textAlign: \"center\",\r\n    margin: \"0 auto\",\r\n    fontSize: \"20px\",\r\n    padding: \"10px\",\r\n  },\r\n\r\n  subtitle: {\r\n    width: \"300px\",\r\n  },\r\n  datadoc: {\r\n    width: \"22%\",\r\n    float: \"left\",\r\n    color: \"#000000\",\r\n    textAlign: \"left\",\r\n    fontSize: \"18px\",\r\n    lineHeight: \"0.2em\",\r\n  },\r\n  inputanHead: {\r\n    width: \"50%\",\r\n    float: \"left\",\r\n    margin: \"10px 20px 10px 0\",\r\n  },\r\n  inputan: {\r\n    width: \"100%\",\r\n    float: \"left\",\r\n    margin: \"10px 20px 10px 0\",\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n    fontSize: \"25px\",\r\n    margin: \"15px 0\",\r\n    padding: \"6px 12px\",\r\n    border: \"1px solid\",\r\n    lineHeight: 1.5,\r\n    color: \"black\",\r\n    backgroundColor: \"#3F51B5\",\r\n    borderColor: \"#0063cc\",\r\n  },\r\n  formRadio: {\r\n    width: \"100%\",\r\n    margin: \"20px 0\",\r\n  },\r\n  labelRadio: {\r\n    color: \"black\",\r\n  },\r\n  checkbox: {\r\n    width: \"100%\",\r\n    margin: \"20px 0\",\r\n  },\r\n  grid: {\r\n    spacing: \"20px\",\r\n    border: \"4px solid\",\r\n    padding: \"15px\",\r\n  },\r\n}));\r\n\r\nfunction InputSupport() {\r\n  const classes = useStyles();\r\n  const [state, setstate] = useState({\r\n    jenisPeralatan: \"\",\r\n    serialNumber: \"\",\r\n    noBody: \"\",\r\n    terminalId: \"\",\r\n    gateId: \"\",\r\n    testTapping: [],\r\n    testPower: \"\",\r\n    testRtc: \"\",\r\n    testGp: \"\",\r\n    keterangan: \"\",\r\n  });\r\n\r\n  const [bank, setBank] = useState({\r\n    BNI: false,\r\n    BRI: false,\r\n    mandiri: false,\r\n    BCA: false,\r\n    DKI: false,\r\n  });\r\n\r\n  let selectBank = () => {\r\n    const filtered = Object.entries(bank);\r\n    return filtered\r\n      .map((r) => {\r\n        if (r[1]) {\r\n          return r[0];\r\n        }\r\n      })\r\n      .filter((r) => r !== undefined);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setstate({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleChangeTapping = (event) => {\r\n    setBank({ ...bank, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let form = { ...state, testTapping: selectBank() };\r\n      const response = await fetch(\r\n        process.env.REACT_APP_URL + \"/api/supp/data\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(form),\r\n        }\r\n      );\r\n      const res = await response.json();\r\n      alert(res.status);\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Encobus Form Checklist\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      ></Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid item xs={12} container spacing={2} className={classes.grid}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <h1 className={classes.title}>CHEKLIST SETUP TOB/TOA</h1>\r\n                  <h1 className={classes.title}>\r\n                    PROYEK PENGADAAN DAN PEMASANGAN PERALATAN TOB/TOA TAHUN 2020\r\n                  </h1>\r\n                </TableRow>\r\n                {/* <Divider />\r\n              <TableRow>\r\n                <TextField\r\n                  className={classes.inputanHead}\r\n                  id=\"date\"\r\n                  label=\"Hari / Tanggal\"\r\n                  variant=\"outlined\"\r\n                  type=\"date\"\r\n                  name=\"tanggal\"\r\n                />\r\n                <TextField\r\n                  className={classes.inputanHead}\r\n                  id=\"team_setup\"\r\n                  label=\"Team Setup\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableRow>*/}\r\n              </TableHead>\r\n              <Divider />\r\n\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <FormControl\r\n                      className={classes.formRadio}\r\n                      component=\"fieldset\"\r\n                    >\r\n                      <FormLabel component=\"legend\">\r\n                        Jenis Peralatan TOB /TOA\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"jenisperalatan\"\r\n                        name=\"jenisPeralatan\"\r\n                        value={state.jenisPeralatan}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"tob\"\r\n                          control={<Radio />}\r\n                          label=\"Bisa\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"tidak\"\r\n                          control={<Radio />}\r\n                          label=\"Tidak\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"serial-number\"\r\n                      label=\"Serial Number\"\r\n                      variant=\"outlined\"\r\n                      name=\"serialNumber\"\r\n                      value={state.serialNumber}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"no-body\"\r\n                      label=\"Nomor Body + Posisi\"\r\n                      variant=\"outlined\"\r\n                      name=\"noBody\"\r\n                      value={state.noBody}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"id-terminal\"\r\n                      label=\"Terminal ID\"\r\n                      variant=\"outlined\"\r\n                      name=\"terminalId\"\r\n                      value={state.terminalId}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"id-gate\"\r\n                      label=\"Gate ID\"\r\n                      variant=\"outlined\"\r\n                      name=\"gateId\"\r\n                      value={state.gateId}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <FormGroup row className={classes.checkbox}>\r\n                      <h5 className={classes.subtitle}>TEST TAPPING</h5>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={bank.BNI}\r\n                            onChange={handleChangeTapping}\r\n                            name=\"BNI\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label=\"BNI\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={bank.BRI}\r\n                            onChange={handleChangeTapping}\r\n                            name=\"BRI\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label=\"BRI\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={bank.mandiri}\r\n                            onChange={handleChangeTapping}\r\n                            name=\"mandiri\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label=\"Mandiri\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={bank.BCA}\r\n                            onChange={handleChangeTapping}\r\n                            name=\"BCA\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label=\"BCA\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={bank.DKI}\r\n                            onChange={handleChangeTapping}\r\n                            name=\"DKI\"\r\n                            color=\"primary\"\r\n                          />\r\n                        }\r\n                        label=\"DKI\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormControl\r\n                      className={classes.formRadio}\r\n                      component=\"fieldset\"\r\n                    >\r\n                      <FormLabel\r\n                        component=\"legend\"\r\n                        className={classes.labelRadio}\r\n                      >\r\n                        Test Power Fail\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"tetspowerfail\"\r\n                        name=\"testPower\"\r\n                        value={state.testPower}\r\n                        onChange={handleChange}\r\n                        row\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"ok\"\r\n                          control={<Radio />}\r\n                          label=\"OK\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"tidak\"\r\n                          control={<Radio />}\r\n                          label=\"Tidak\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl\r\n                      className={classes.formRadio}\r\n                      component=\"fieldset\"\r\n                    >\r\n                      <FormLabel\r\n                        component=\"legend\"\r\n                        className={classes.labelRadio}\r\n                      >\r\n                        Test RTO\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"tetspowerfail\"\r\n                        name=\"testRtc\"\r\n                        value={state.testRtc}\r\n                        onChange={handleChange}\r\n                        row\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"ok\"\r\n                          control={<Radio />}\r\n                          label=\"OK\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"tidak\"\r\n                          control={<Radio />}\r\n                          label=\"Tidak\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>{\" \"}\r\n                    <FormControl\r\n                      className={classes.formRadio}\r\n                      component=\"fieldset\"\r\n                    >\r\n                      <FormLabel\r\n                        component=\"legend\"\r\n                        className={classes.labelRadio}\r\n                      >\r\n                        Test GP100\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"tetspowerfail\"\r\n                        name=\"testGp\"\r\n                        value={state.testGp}\r\n                        onChange={handleChange}\r\n                        row\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"ok\"\r\n                          control={<Radio />}\r\n                          label=\"OK\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"tidak\"\r\n                          control={<Radio />}\r\n                          label=\"Tidak\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                    {/* <h5>KONFIGURASI BANK</h5>\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"bni_mid\"\r\n                    label=\"BNI MID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"bni_tid\"\r\n                    label=\"BNI TID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"bri_mid\"\r\n                    label=\"BRI MID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"bri_tid\"\r\n                    label=\"BRI TID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"bri_pcd\"\r\n                    label=\"BRI PCD\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"mandiri_sam_pin\"\r\n                    label=\"MANDIRI SAM PIN\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"mandiri_mid\"\r\n                    label=\"MANDIRI MID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"mandiri_tid\"\r\n                    label=\"MANDIRI TID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"bca_mid\"\r\n                    label=\"BCA MID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"bca_tid\"\r\n                    label=\"BCA TID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"dki_mid\"\r\n                    label=\"DKI MID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"dki_tid\"\r\n                    label=\"DKI TID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    className={classes.inputan}\r\n                    id=\"mandiri_mid\"\r\n                    label=\"MANDIRI MID\"\r\n                    variant=\"outlined\"\r\n                  /> */}\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"keterangan\"\r\n                      label=\"KETERANGAN\"\r\n                      variant=\"outlined\"\r\n                      name=\"keterangan\"\r\n                      value={state.keterangan}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n          <Button type=\"submit\" className={classes.button}>\r\n            Input Data\r\n          </Button>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default InputSupport;\r\n","/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/Pemeliharaan/index.js",["88","89","90","91","92"],"import {\r\n  Button,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport \"date-fns\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n\r\n  title: {\r\n    width: \"100%\",\r\n    color: \"black\",\r\n    fontSize: \"20px\",\r\n    textAlign: \"center\",\r\n    margin: \"15px 0\",\r\n  },\r\n  cellHeader: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    margin: \"0 Auto\",\r\n  },\r\n\r\n  grid: {\r\n    dark: \"#002884\",\r\n    width: \"100%\",\r\n    padding: \"15px\",\r\n  },\r\n  gridleft: {\r\n    dark: \"#002884\",\r\n    width: \"50%\",\r\n    float: \"left\",\r\n  },\r\n  gridright: {\r\n    dark: \"#002884\",\r\n    width: \"50%\",\r\n    float: \"left\",\r\n  },\r\n  inputan: {\r\n    width: \"100%\",\r\n    float: \"left\",\r\n    margin: \"10px 20px 10px 0\",\r\n  },\r\n  catatan: {\r\n    width: \"100%\",\r\n    margin: \"20px 0\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n    fontSize: \"22px\",\r\n    margin: \"15px 0\",\r\n    padding: \"6px 12px\",\r\n    border: \"1px solid\",\r\n    lineHeight: 1.5,\r\n    color: \"#ffffff\",\r\n    backgroundColor: \"#3F51B5\",\r\n    borderColor: \"#0063cc\",\r\n  },\r\n}));\r\n\r\nfunction InputPemeliharaan() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [state, setState] = React.useState({\r\n    namaPengemudi: \"\",\r\n    nomorBody: \"\",\r\n    nopol: \"\",\r\n    penyedia: \"\",\r\n    waktuGangguan: \"\",\r\n    deskripsi: \"\",\r\n    checkProblem: [],\r\n    tindakan: [],\r\n    diagnosa: \"\",\r\n    visit: \"\",\r\n    perbaikanSelesai: \"\",\r\n    waktuPerbaikan: \"\",\r\n    catatan: \"\",\r\n  });\r\n\r\n  const [problem, setProblem] = React.useState({\r\n    \"Koneksi Jaringan\": false,\r\n    Hardware: false,\r\n    \"Kelistrikan Kendaraan\": false,\r\n    Software: false,\r\n    \"Kartu Rusak\": false,\r\n    \"Lain-lain\": false,\r\n  });\r\n\r\n  const [tindakan, setTindakan] = React.useState({\r\n    Perbaikan: false,\r\n    \"Ganti Perangkat Baru\": false,\r\n    \"Pindah / Lepas / Pasang\": false,\r\n  });\r\n\r\n  const formatData = (data) => {\r\n    const filtered = Object.entries(data);\r\n    return filtered\r\n      .map((r) => {\r\n        if (r[1]) {\r\n          return r[0];\r\n        }\r\n      })\r\n      .filter((r) => r !== undefined);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleChangeProblem = (event) => {\r\n    setProblem({ ...problem, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const handleChangeTindakan = (event) => {\r\n    setTindakan({ ...tindakan, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let form = {\r\n        ...state,\r\n        checkProblem: formatData(problem),\r\n        tindakan: formatData(tindakan),\r\n      };\r\n      console.log(form);\r\n      // const response = await fetch(\r\n      //   process.env.REACT_APP_URL + \"/api/pml/data\",\r\n      //   {\r\n      //     method: \"POST\",\r\n      //     headers: {\r\n      //       \"Content-Type\": \"application/json\",\r\n      //     },\r\n      //     body: JSON.stringify(form),\r\n      //   }\r\n      // );\r\n      // const res = await response.json();\r\n      // alert(res.status);\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Encobus Form Checklist\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      ></Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n\r\n        <Grid item xs={12} className={classes.grid}>\r\n          <form onSubmit={handleSubmit}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={classes.cellHeader}>\r\n                    <h1 className={classes.title}>\r\n                      FORMULIR PERBAIKAN KERUSAKAN PERANGKAT TOB\r\n                    </h1>\r\n                    <h1 className={classes.title}>\r\n                      SISTEM TIKET ELEKTRONIK DI KENDARAAN\r\n                    </h1>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell colspan={3}>\r\n                    {/* <TextField\r\n                    className={classes.inputan}\r\n                    id=\"tanggal\"\r\n                    variant=\"outlined\"\r\n                    label=\"Tanggal\"\r\n                    type=\"date\"\r\n                    defaultValue=\"2017-05-24\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  /> */}\r\n                    {/* <TextField\r\n                    className={classes.inputan}\r\n                    id=\"rute-nonbrt\"\r\n                    label=\"Rute Non BRT\"\r\n                    variant=\"outlined\"\r\n                  /> */}\r\n                    {/* <TextField\r\n                    className={classes.inputan}\r\n                    id=\"no-ticket\"\r\n                    label=\"No Ticket\"\r\n                    variant=\"outlined\"\r\n                  /> */}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell colspan={2}>\r\n                    <h3 className={classes.text}>INFORMASI KENDARAAN</h3>\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"nama-pengemudi\"\r\n                      label=\"Nama Pengemudi\"\r\n                      variant=\"outlined\"\r\n                      name=\"namaPengemudi\"\r\n                      value={state.namaPengemudi}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"no-body-kendaraan\"\r\n                      label=\"Nomor Body Kendaraan \"\r\n                      variant=\"outlined\"\r\n                      name=\"nomorBody\"\r\n                      value={state.nomorBody}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"no-polisi-kendaraan\"\r\n                      label=\"Nomor Polisi Kendaraan\"\r\n                      variant=\"outlined\"\r\n                      name=\"nopol\"\r\n                      value={state.nopol}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <h3 className={classes.text}>\r\n                      INFORMASI PERANGAKAT READER\r\n                    </h3>\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"penyedia-perangkat\"\r\n                      label=\"Penyedia Perangkat\"\r\n                      variant=\"outlined\"\r\n                      name=\"penyedia\"\r\n                      value={state.penyedia}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"waktu-gangguan\"\r\n                      label=\"Waktu Gangguan/Kerusakan : \"\r\n                      variant=\"outlined\"\r\n                      name=\"waktuGangguan\"\r\n                      value={state.waktuGangguan}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"deskripsi-gangguan\"\r\n                      label=\"Deskripsi Gangguan\"\r\n                      multiline\r\n                      rows={4}\r\n                      variant=\"outlined\"\r\n                      name=\"deskripsi\"\r\n                      value={state.deskripsi}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <h3 className={classes.text}>CHECK PROBLEM</h3>\r\n                    <FormGroup row>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={problem[\"Koneksi Jaringan\"]}\r\n                            onChange={handleChangeProblem}\r\n                            name=\"Koneksi Jaringan\"\r\n                          />\r\n                        }\r\n                        label=\"Koneksi Jaringan\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={problem.Hardware}\r\n                            onChange={handleChangeProblem}\r\n                            name=\"Hardware\"\r\n                          />\r\n                        }\r\n                        label=\"Hardware\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={problem[\"Kelistrikan Kendaraan\"]}\r\n                            onChange={handleChangeProblem}\r\n                            name=\"Kelistrikan Kendaraan\"\r\n                          />\r\n                        }\r\n                        label=\"Kelistrikan Kendaraan\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={problem[\"Software\"]}\r\n                            onChange={handleChangeProblem}\r\n                            name=\"Software\"\r\n                          />\r\n                        }\r\n                        label=\"Software\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={problem[\"Kartu Rusak\"]}\r\n                            onChange={handleChangeProblem}\r\n                            name=\"Kartu Rusak\"\r\n                          />\r\n                        }\r\n                        label=\"Kartu Rusak\"\r\n                      />\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            checked={problem[\"Lain-lain\"]}\r\n                            onChange={handleChangeProblem}\r\n                            name=\"Lain-lain\"\r\n                          />\r\n                        }\r\n                        label=\"Lain-lain\"\r\n                      />\r\n                    </FormGroup>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <h4>Tindakan yang dilakukan</h4>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={tindakan[\"Perbaikan\"]}\r\n                          onChange={handleChangeTindakan}\r\n                          name=\"Perbaikan\"\r\n                        />\r\n                      }\r\n                      label=\"Perbaikan\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={problem[\"Ganti Perangkat Baru\"]}\r\n                          onChange={handleChangeTindakan}\r\n                          name=\"Ganti Perangkat Baru\"\r\n                        />\r\n                      }\r\n                      label=\"Ganti Perangkat Baru\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={problem[\"Pindah / Lepas / Pasang\"]}\r\n                          onChange={handleChangeTindakan}\r\n                          name=\"Pindah / Lepas / Pasang\"\r\n                        />\r\n                      }\r\n                      label=\"Pindah / Lepas / Pasang\"\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"diagnosa-gangguan\"\r\n                      label=\"Diagnosa Gangguan / Kerusakan\"\r\n                      multiline\r\n                      rows={4}\r\n                      // defaultValue=\"Default Value\"\r\n                      variant=\"outlined\"\r\n                      name=\"diagnosa\"\r\n                      value={state.diagnosa}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      id=\"waktu-perbaikan\"\r\n                      label=\"Waktu Perbaikan\"\r\n                      variant=\"outlined\"\r\n                      type=\"time\"\r\n                      defaultValue=\"00:00\"\r\n                      className={classes.inputan}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      inputProps={{\r\n                        step: 300, // 5 min\r\n                      }}\r\n                      name=\"waktuPerbaikan\"\r\n                      value={state.waktuPerbaikan}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.inputan}\r\n                      id=\"tanggal-selesai-perbaikan\"\r\n                      variant=\"outlined\"\r\n                      label=\"Tanggal Selesai Perbaikan\"\r\n                      type=\"date\"\r\n                      defaultValue=\"2021-01-01\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"perbaikanSelesai\"\r\n                      value={state.perbaikanSelesai}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      id=\"waktu-perbaikan\"\r\n                      label=\"Visit\"\r\n                      variant=\"outlined\"\r\n                      type=\"time\"\r\n                      defaultValue=\"00:00\"\r\n                      className={classes.inputan}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      inputProps={{\r\n                        step: 300, // 5 min\r\n                      }}\r\n                      name=\"visit\"\r\n                      value={state.visit}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                      className={classes.catatan}\r\n                      id=\"catatan-teknisi\"\r\n                      label=\"Catatan Teknisi / Solusi\"\r\n                      multiline\r\n                      rows={4}\r\n                      // defaultValue=\"Default Value\"\r\n                      variant=\"outlined\"\r\n                      name=\"catatan\"\r\n                      value={state.catatan}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n            <Button type=\"submit\" className={classes.button}>\r\n              Input Data\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default InputPemeliharaan;\r\n","/home/delameta/Desktop/belajar/efc/src/components/moleculs/Layout/index.js",[],"/home/delameta/Desktop/belajar/efc/src/components/atoms/Gap/index.js",[],"/home/delameta/Desktop/belajar/efc/src/components/atoms/PrivateRoute/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/Reader/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/Reader/TesFungsi/index.js",[],"/home/delameta/Desktop/belajar/efc/src/pages/Dashboard/Reader/Kelengkapan/index.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":32,"column":5,"nodeType":"99","messageId":"100","endLine":32,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":196,"column":16,"nodeType":"104","messageId":"105","endLine":196,"endColumn":18},{"ruleId":"97","severity":1,"message":"106","line":233,"column":9,"nodeType":"99","messageId":"100","endLine":233,"endColumn":14},{"ruleId":"97","severity":1,"message":"107","line":240,"column":9,"nodeType":"99","messageId":"100","endLine":240,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":24,"column":17,"nodeType":"99","messageId":"100","endLine":24,"endColumn":26},{"ruleId":"97","severity":1,"message":"108","line":24,"column":28,"nodeType":"99","messageId":"100","endLine":24,"endColumn":36},{"ruleId":"97","severity":1,"message":"106","line":141,"column":9,"nodeType":"99","messageId":"100","endLine":141,"endColumn":14},{"ruleId":"97","severity":1,"message":"107","line":148,"column":9,"nodeType":"99","messageId":"100","endLine":148,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":186,"column":16,"nodeType":"104","messageId":"105","endLine":186,"endColumn":18},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'a' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'theme' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]