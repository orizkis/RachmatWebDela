[{"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/index.js":"1","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/App.js":"2","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/reportWebVitals.js":"3","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/Router/index.js":"4","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/index.js":"5","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/index.js":"6","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/index.js":"7","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Login/index.js":"8","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/MainApp/index.js":"9","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/moleculs/index.js":"10","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/atoms/index.js":"11","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/atoms/PrivateRoute/index.js":"12","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/moleculs/Layout/index.js":"13","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/atoms/Gap/index.js":"14","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/Reader/index.js":"15","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/Reader/TesFungsi/index.js":"16","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/Reader/Kelengkapan/index.js":"17"},{"size":520,"mtime":1611382098973,"results":"18","hashOfConfig":"19"},{"size":93,"mtime":1611382098970,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611382098976,"results":"21","hashOfConfig":"19"},{"size":461,"mtime":1611382098971,"results":"22","hashOfConfig":"19"},{"size":138,"mtime":1611548132472,"results":"23","hashOfConfig":"19"},{"size":53,"mtime":1611382098972,"results":"24","hashOfConfig":"19"},{"size":3834,"mtime":1611573740845,"results":"25","hashOfConfig":"19"},{"size":1561,"mtime":1611382098975,"results":"26","hashOfConfig":"19"},{"size":991,"mtime":1611548173443,"results":"27","hashOfConfig":"19"},{"size":51,"mtime":1611382098973,"results":"28","hashOfConfig":"19"},{"size":99,"mtime":1611382098972,"results":"29","hashOfConfig":"19"},{"size":496,"mtime":1611382098972,"results":"30","hashOfConfig":"19"},{"size":4473,"mtime":1611548758446,"results":"31","hashOfConfig":"19"},{"size":137,"mtime":1611548069872,"results":"32","hashOfConfig":"19"},{"size":2978,"mtime":1611573304260,"results":"33","hashOfConfig":"19"},{"size":8887,"mtime":1611566721162,"results":"34","hashOfConfig":"19"},{"size":5102,"mtime":1611566712378,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"b10gd2",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/index.js",[],["74","75"],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/App.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/reportWebVitals.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/Router/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/index.js",["76","77"],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Login/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/MainApp/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/moleculs/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/atoms/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/atoms/PrivateRoute/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/moleculs/Layout/index.js",["78","79"],"import {\n  AppBar,\n  CssBaseline,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  ChevronLeft,\n  ChevronRight,\n  EventNote,\n  Home,\n  ListAlt,\n  Menu,\n} from \"@material-ui/icons\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst dataMenu = [{ path: \"/\", text: \"Home\", icon: <Home /> }];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  navlink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n}));\n\nfunction Layout(props) {\n  let location = useLocation();\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            {location.pathname === \"/\" ? \"Reader\" : \"set dlu cuy\"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? <ChevronRight /> : <ChevronLeft />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {dataMenu.map((row, index) => {\n            return (\n              <NavLink to={row.path} key={index} className={classes.navlink}>\n                <ListItem\n                  button\n                  key={index}\n                  selected={location.pathname === row.path}\n                >\n                  <ListItemIcon>{row.icon}</ListItemIcon>\n                  <ListItemText primary={row.text} />\n                </ListItem>\n              </NavLink>\n            );\n          })}\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n\nexport default Layout;\n","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/components/atoms/Gap/index.js",[],"/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/Reader/index.js",["80","81"],"import IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { KeyboardArrowDown, KeyboardArrowUp } from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport Kelengkapan from \"./Kelengkapan\";\nimport TesFungsi from \"./TesFungsi\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nconst Row = ({ data }) => {\n  const [open, setOpen] = useState({ kelengkapan: false, tesFungsi: false });\n  const { kelengkapan, tesFungsi } = open;\n  return (\n    <>\n      <TableRow key={data.nama_alat}>\n        <TableCell component=\"th\" scope=\"row\">\n          {data.nama_alat}\n        </TableCell>\n        <TableCell align=\"right\">{data.jenis_or_type}</TableCell>\n        <TableCell align=\"right\">{data.serial_number_reader}</TableCell>\n        <TableCell align=\"right\">\n          {moment(data.created_at).format(\"DD-MM-YYYY\")}\n        </TableCell>\n        <TableCell align=\"right\">\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() =>\n              setOpen({\n                ...open,\n                kelengkapan: !kelengkapan,\n              })\n            }\n          >\n            {kelengkapan ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell align=\"right\">\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen({ ...open, tesFungsi: !tesFungsi })}\n          >\n            {tesFungsi ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n      </TableRow>\n      {kelengkapan && <Kelengkapan title={data.nama_alat} />}\n      {tesFungsi && <TesFungsi title={data.nama_alat} />}\n    </>\n  );\n};\n\nconst Reader = ({ data }) => {\n  const classes = useStyles();\n  const [state, setState] = useState();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Nama Alat</TableCell>\n            <TableCell align=\"right\">Tipe</TableCell>\n            <TableCell align=\"right\">Serial Number</TableCell>\n            <TableCell align=\"right\">Created at</TableCell>\n            <TableCell align=\"right\">Kelengkapan</TableCell>\n            <TableCell align=\"right\">Tes Fungsi</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{data && data.map((row) => <Row data={row} />)}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Reader;\n","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/Reader/TesFungsi/index.js",["82"],"import { Radio, TextareaAutosize, Typography } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useState, useEffect } from \"react\";\nimport { Gap } from \"../../../../components\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n});\n\nlet formatData = (data) => {\n  let result = [];\n  data.forEach((row) => {\n    if (!row.id_parent_fungsi1 && !row.id_parent_fungsi2) {\n      result.push({ ...row, children: [] });\n    } else {\n      result.forEach((row2) => {\n        if (row2.id_test === row.id_parent_fungsi1 && !row.id_parent_fungsi2) {\n          row2.children.push({ ...row, children: [] });\n        }\n        if (row2.id_test === row.id_parent_fungsi2) {\n          row2.children.forEach((row3) => {\n            if (row3.id_test === row.id_parent_fungsi1) {\n              row3.children.push(row);\n            }\n          });\n        }\n      });\n    }\n  });\n  return result;\n};\n\nconst SecondRow = ({ row, handleChange }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          {row.children.length > 0 && (\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          )}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.nama_test}\n        </TableCell>\n        <TableCell align=\"right\">\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Radio\n              checked={row.hasilTest === \"bisa\"}\n              onChange={handleChange}\n              value=\"bisa\"\n              name={row.id_test}\n              inputProps={{ \"aria-label\": \"A\" }}\n              color=\"primary\"\n            />\n            <Radio\n              checked={row.hasilTest === \"tidak\"}\n              onChange={handleChange}\n              value=\"tidak\"\n              name={row.id_test}\n              inputProps={{ \"aria-label\": \"A\" }}\n            />\n          </div>\n        </TableCell>\n        <TableCell align=\"right\">\n          <TextareaAutosize\n            aria-label=\"empty textarea\"\n            placeholder=\"Empty\"\n            style={{ minWidth: 150 }}\n            rowsMin={2}\n            onChange={handleChange}\n            value={row.keterangan}\n            name={row.id_test}\n          />\n        </TableCell>\n      </TableRow>\n      {open &&\n        row.children.map((data) => (\n          <ThirdRow row={data} handleChange={handleChange} />\n        ))}\n    </React.Fragment>\n  );\n};\n\nconst ThirdRow = ({ row, handleChange }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell style={{ paddingLeft: 40 }}>\n          {row.children.length > 0 && (\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          )}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\" style={{ paddingLeft: 40 }}>\n          {row.nama_test}\n        </TableCell>\n        <TableCell align=\"right\">\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Radio\n              checked={row.hasilTest === \"bisa\"}\n              onChange={handleChange}\n              value=\"bisa\"\n              name={row.id_test}\n              inputProps={{ \"aria-label\": \"A\" }}\n              color=\"primary\"\n            />\n            <Radio\n              checked={row.hasilTest === \"tidak\"}\n              onChange={handleChange}\n              value=\"tidak\"\n              name={row.id_test}\n              inputProps={{ \"aria-label\": \"A\" }}\n            />\n          </div>\n        </TableCell>\n        <TableCell align=\"right\">\n          <TextareaAutosize\n            aria-label=\"empty textarea\"\n            placeholder=\"Empty\"\n            style={{ minWidth: 150 }}\n            rowsMin={2}\n            onChange={handleChange}\n            value={row.keterangan}\n            name={row.id_test}\n          />\n        </TableCell>\n      </TableRow>\n      {open &&\n        row.children.map((data) => (\n          <TableRow className={classes.root}>\n            <TableCell></TableCell>\n            <TableCell component=\"th\" scope=\"row\" style={{ paddingLeft: 80 }}>\n              {data.nama_test}\n            </TableCell>\n            <TableCell align=\"right\">\n              <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <Radio\n                  checked={data.hasilTest === \"bisa\"}\n                  onChange={handleChange}\n                  value=\"bisa\"\n                  name={data.id_test}\n                  inputProps={{ \"aria-label\": \"A\" }}\n                  color=\"primary\"\n                />\n                <Radio\n                  checked={data.hasilTest === \"tidak\"}\n                  onChange={handleChange}\n                  value=\"tidak\"\n                  name={data.id_test}\n                  inputProps={{ \"aria-label\": \"A\" }}\n                />\n              </div>\n            </TableCell>\n            <TableCell align=\"right\">\n              <TextareaAutosize\n                aria-label=\"empty textarea\"\n                placeholder=\"Empty\"\n                style={{ minWidth: 150 }}\n                rowsMin={2}\n                onChange={handleChange}\n                value={data.keterangan}\n                name={data.id_test}\n              />\n            </TableCell>\n          </TableRow>\n        ))}\n    </React.Fragment>\n  );\n};\n\nconst TesFungsi = ({ title }) => {\n  const [state, setState] = useState([]);\n  const [form, setForm] = useState();\n\n  const handleChange = (event) => {\n    let data = state.map((row) => {\n      if (row.id_test === event.target.name) {\n        return {\n          ...row,\n          [event.target.type === \"radio\" ? \"hasilTest\" : \"keterangan\"]: event\n            .target.value,\n        };\n      }\n      return row;\n    });\n    setState(data);\n  };\n\n  const getData = async () => {\n    try {\n      const response = await fetch(\n        process.env.REACT_APP_URL + \"/api/data/list_tes\"\n      );\n      let res = await response.json();\n      setState(res.data);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    if (state) {\n      let data = state.map((row) => {\n        return {\n          idReader: 1,\n          idTestFungsi: row.id_test,\n          hasilTest: row.hasilTest,\n          keterangan: row.keterangan,\n        };\n      });\n      setForm(data);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Gap height={40} />\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Tes Fungsi ({title})\n            </Typography>\n            <Gap height={20} />\n            <TableContainer component={Paper}>\n              <Table style={{ minWidth: 500 }} aria-label=\"collapsible table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell />\n                    <TableCell>Nama Test</TableCell>\n                    <TableCell align=\"right\">Bisa / Tidak</TableCell>\n                    <TableCell align=\"right\">Keterangan</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {formatData(state).map((row) => (\n                    <SecondRow\n                      key={row.name}\n                      row={row}\n                      handleChange={handleChange}\n                    />\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\nexport default TesFungsi;\n","/Users/rizki/Desktop/PROJECT/RachmatWebDela/src/pages/Dashboard/Reader/Kelengkapan/index.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":54,"column":11,"nodeType":"89","messageId":"90","endLine":54,"endColumn":14},{"ruleId":"87","severity":1,"message":"92","line":18,"column":3,"nodeType":"89","messageId":"90","endLine":18,"endColumn":12},{"ruleId":"87","severity":1,"message":"93","line":20,"column":3,"nodeType":"89","messageId":"90","endLine":20,"endColumn":10},{"ruleId":"87","severity":1,"message":"94","line":68,"column":10,"nodeType":"89","messageId":"90","endLine":68,"endColumn":15},{"ruleId":"87","severity":1,"message":"95","line":68,"column":17,"nodeType":"89","messageId":"90","endLine":68,"endColumn":25},{"ruleId":"87","severity":1,"message":"96","line":204,"column":10,"nodeType":"89","messageId":"90","endLine":204,"endColumn":14},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'EventNote' is defined but never used.","'ListAlt' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'form' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]